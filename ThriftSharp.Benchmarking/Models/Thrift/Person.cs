/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace ThriftSharp.Benchmarking.Models.Thrift
{
    
  public partial class Person : TBase
  {
    private string _lastName;
    private int _age;

    public string FirstName { get; set; }

    public List<string> MiddleNames { get; set; }

    public string LastName
    {
      get
      {
        return _lastName;
      }
      set
      {
        __isset.lastName = true;
        this._lastName = value;
      }
    }

    public int Age
    {
      get
      {
        return _age;
      }
      set
      {
        __isset.age = true;
        this._age = value;
      }
    }

    public string Email { get; set; }

    public List<string> Websites { get; set; }


    public Isset __isset;
    
    public struct Isset {
      public bool lastName;
      public bool age;
    }

    public Person() {
    }

    public Person(string firstName, List<string> middleNames, string email, List<string> websites) : this() {
      this.FirstName = firstName;
      this.MiddleNames = middleNames;
      this.Email = email;
      this.Websites = websites;
    }

    public void Read (TProtocol iprot)
    {
      bool isset_firstName = false;
      bool isset_middleNames = false;
      bool isset_email = false;
      bool isset_websites = false;
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              FirstName = iprot.ReadString();
              isset_firstName = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                MiddleNames = new List<string>();
                TList _list13 = iprot.ReadListBegin();
                for( int _i14 = 0; _i14 < _list13.Count; ++_i14)
                {
                  string _elem15;
                  _elem15 = iprot.ReadString();
                  MiddleNames.Add(_elem15);
                }
                iprot.ReadListEnd();
              }
              isset_middleNames = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              LastName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Age = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Email = iprot.ReadString();
              isset_email = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.List) {
              {
                Websites = new List<string>();
                TList _list16 = iprot.ReadListBegin();
                for( int _i17 = 0; _i17 < _list16.Count; ++_i17)
                {
                  string _elem18;
                  _elem18 = iprot.ReadString();
                  Websites.Add(_elem18);
                }
                iprot.ReadListEnd();
              }
              isset_websites = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
      if (!isset_firstName)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_middleNames)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_email)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_websites)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("Person");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      field.Name = "firstName";
      field.Type = TType.String;
      field.ID = 1;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(FirstName);
      oprot.WriteFieldEnd();
      field.Name = "middleNames";
      field.Type = TType.List;
      field.ID = 2;
      oprot.WriteFieldBegin(field);
      {
        oprot.WriteListBegin(new TList(TType.String, MiddleNames.Count));
        foreach (string _iter19 in MiddleNames)
        {
          oprot.WriteString(_iter19);
        }
        oprot.WriteListEnd();
      }
      oprot.WriteFieldEnd();
      if (LastName != null && __isset.lastName) {
        field.Name = "lastName";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(LastName);
        oprot.WriteFieldEnd();
      }
      if (__isset.age) {
        field.Name = "age";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Age);
        oprot.WriteFieldEnd();
      }
      field.Name = "email";
      field.Type = TType.String;
      field.ID = 5;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(Email);
      oprot.WriteFieldEnd();
      field.Name = "websites";
      field.Type = TType.List;
      field.ID = 6;
      oprot.WriteFieldBegin(field);
      {
        oprot.WriteListBegin(new TList(TType.String, Websites.Count));
        foreach (string _iter20 in Websites)
        {
          oprot.WriteString(_iter20);
        }
        oprot.WriteListEnd();
      }
      oprot.WriteFieldEnd();
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("Person(");
      __sb.Append(", FirstName: ");
      __sb.Append(FirstName);
      __sb.Append(", MiddleNames: ");
      __sb.Append(MiddleNames);
      if (LastName != null && __isset.lastName) {
        __sb.Append(", LastName: ");
        __sb.Append(LastName);
      }
      if (__isset.age) {
        __sb.Append(", Age: ");
        __sb.Append(Age);
      }
      __sb.Append(", Email: ");
      __sb.Append(Email);
      __sb.Append(", Websites: ");
      __sb.Append(Websites);
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
